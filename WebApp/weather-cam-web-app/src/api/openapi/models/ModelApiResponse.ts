/* tslint:disable */
/* eslint-disable */
/**
 * Weather-Cam-API (OpenAPI 3.0)
 * Weather-Cam-API is a REST API created as a part a software project at Eötvös Loránd university. The goal of the project is to turn old/unused mobile phones and an [esp8266](https://www.espressif.com/en/products/socs/esp8266) into a diy weather stations capable of recording photos, temperature, pressure and humidity data. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * ApiResponse contains information about the result of a request.
 * @export
 * @interface ModelApiResponse
 */
export interface ModelApiResponse {
    /**
     * code is the status of the returned request. code follows the [HTTP response codes](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status)
     * @type {number}
     * @memberof ModelApiResponse
     */
    code?: number;
    /**
     * type is used to categorize responses. The different types of responses can be found [here](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status).
     * @type {string}
     * @memberof ModelApiResponse
     */
    type?: string;
    /**
     * message is a more detailed information about the response.
     * @type {string}
     * @memberof ModelApiResponse
     */
    message?: string;
}

/**
 * Check if a given object implements the ModelApiResponse interface.
 */
export function instanceOfModelApiResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ModelApiResponseFromJSON(json: any): ModelApiResponse {
    return ModelApiResponseFromJSONTyped(json, false);
}

export function ModelApiResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModelApiResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'code': !exists(json, 'code') ? undefined : json['code'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'message': !exists(json, 'message') ? undefined : json['message'],
    };
}

export function ModelApiResponseToJSON(value?: ModelApiResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'code': value.code,
        'type': value.type,
        'message': value.message,
    };
}

